package com.gtq.order.tools;

import java.util.ArrayList;
import java.util.HashMap;

import com.gtq.order.bean.FoodBean;
import com.gtq.order.myinterface.AdatperFuntion;
import com.gtq.order.view.R;


import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.SharedPreferences.Editor;
import android.support.v4.view.PagerAdapter;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.CompoundButton.OnCheckedChangeListener;

public class MyAdapters {

	
	/**
	 * @description 详细适配器
	 * @version 1.0
	 * @author zdq
	 * @update 2013-8-10 上午1:51:32
	 */

	class MyViewPagerAdapter extends PagerAdapter {

		/**
		 * @fields mListViews
		 */
		ArrayList<View> mListViews;

		public MyViewPagerAdapter(ArrayList<View> mListViews) {
			this.mListViews = mListViews;
		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return mListViews.size();
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			// TODO Auto-generated method stub
			return arg0 == arg1;
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			// TODO Auto-generated method stub
			container.addView(mListViews.get(position));

			return mListViews.get(position);
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			// TODO Auto-generated method stub
			container.removeView(mListViews.get(position));
		}

	}
	/**
	 * @description
	 * @version 1.0
	 * @author zdq
	 * @update 2013-8-10 上午1:51:15
	 */

	static class ViewHolder {
		CheckBox select;
		TextView name;
		TextView price;
		ImageView details;

	}


	/**
	 * @description 食品适配器
	 * @version 1.0
	 * @author zdq
	 * @update 2013-8-10 上午1:51:50
	 */

	class foodlistAdapter extends BaseAdapter {
		

		Context context;
		ArrayList<FoodBean> foodBeans;
		AdatperFuntion adatperFuntion;

		public foodlistAdapter(ArrayList<FoodBean> foodBeans, Context context,	
				AdatperFuntion adatperFuntion) {
			this.foodBeans = foodBeans;
			this.context = context;
			this.adatperFuntion=adatperFuntion;
		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return foodBeans.size();
		}

		@Override
		public Object getItem(int position) {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public View getView(final int position, View convertView,
				ViewGroup parent) {
			// TODO Auto-generated method stub
			ViewHolder holder;
			// if(convertView==null)
			// {
			convertView = LayoutInflater.from(context).inflate(
					R.layout.order_user_food_item, null);
			holder = new ViewHolder();
			holder.select = (CheckBox) convertView
					.findViewById(R.id.order_user_food_checkbox);
			holder.name = (TextView) convertView
					.findViewById(R.id.order_user_food_name);
			holder.price = (TextView) convertView
					.findViewById(R.id.order_user_food_price);
			holder.details = (ImageView) convertView
					.findViewById(R.id.order_user_food_msg);

			convertView.setTag(holder);

			// }
			// else{
			// holder = (ViewHolder)convertView.getTag();
			// }
			foodBeans.get(position).setIsselect(
					context.getSharedPreferences("foodstate", 0).getBoolean(
							foodBeans.get(position).getId(), false));
			holder.select.setChecked(context.getSharedPreferences("foodstate", 0)
					.getBoolean(foodBeans.get(position).getId(), false));
			holder.select
					.setOnCheckedChangeListener(new OnCheckedChangeListener() {

						@Override
						public void onCheckedChanged(CompoundButton buttonView,
								boolean isChecked) {
							// TODO Auto-generated method stub

							int i = position;
							Editor editor = context.getSharedPreferences("foodstate", 0)
									.edit();
							editor.putBoolean(foodBeans.get(i).getId(),
									isChecked);
							editor.commit();

						}
					});
			holder.name = (TextView) convertView
					.findViewById(R.id.order_user_food_name);
			holder.name.setText(foodBeans.get(position).getName());
			holder.price = (TextView) convertView
					.findViewById(R.id.order_user_food_price);
			holder.price.setText(foodBeans.get(position).getPrice());
			holder.details.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					adatperFuntion.adapterButtonClick((Button)v, "details",position);
					
				}
			});

			return convertView;
		}

	}
	

}
